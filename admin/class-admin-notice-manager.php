<?php


/**
 * Manages Admin Notices generated by the plugin
 *
 * @link       http://example.com
 * @since      1.0.0
 *
 * @package    Mooberry_Directory
 * @subpackage Mooberry_Directory/includes/vendor/mooberry-dreams
 */

/**
 * Manages Admin Notices generated by the plugin
 *
 * Maintains a list of admin notices generated by the plugin.
 * Display them and dismiss as needed.
 *
 */
class Costume_Con_Archives_Admin_Notice_Manager {

	/**
	 * The array of notices this plugin generates
	 *
	 * @since    1.0.0
	 * @access   private
	 * @var      array    $plugins    The notices this plugin generates
	 */
	private static $notices = array();

	private static $options_key = 'cca_admin_notices';

	
	private static function maybe_load_notices() {
		if ( count(self::$notices ) == 0 ) {
			$notices = get_option( self::$options_key, array() );
			if ( ! is_array( $notices ) ) {
				$notices = array( $notices );
			}
			self::$notices = $notices;
		}
	}

	public static function get_notice( $key ) {
		self::maybe_load_notices();
		return self::$notices[ $key ];
	}

	public static function count_notices() {
		self::maybe_load_notices();
		return count( self::$notices );
	}

	/**
	 * Add a new notice to the collection and saves it to the database
	 *
	 * @since    1.0.0
	 * @param    string               $message    The message to display
	 * @param    string               $severity   The severity/type of notice to be displayed
	 * @param    string               $key        A unique key for the notice
	 */
	public static function add_new( $message, $severity, $key ) {
		self::maybe_load_notices();
		self::$notices[ $key ] = array(
						'message'   =>  $message,
						'severity'  =>  $severity,
						'key'   =>  $key
		);
		self::save();
	}

	/**
	 *  Remove a notice and update the database
	 *
	 * @param string                $key        the notice to remove
	 */
	public static function dismiss( $key ) {
		self::maybe_load_notices();
		unset( self::$notices[ $key ] );
		self::save();
	}


	/**
	 * Saves all notices to the database
	 */
	private static function save() {
		self::maybe_load_notices();
		update_option( self::$options_key, self::$notices );
	}

	/**
	 * Display all of the notices
	 *
	 * @since    1.0.0
	 */
	public static function display_notices() {
		self::maybe_load_notices();
		foreach ( self::$notices as $notice ) {
			$severity = isset($notice['severity']) ? $notice['severity'] : '';
			$key = isset($notice['key']) ? $notice['key'] : '';
			$message = isset( $notice[ 'message' ] ) ? $notice[ 'message' ] : '';

			if ( $severity == '' || $key == '' || $message == '' ) {
				continue;
			}

			echo "<div class='notice " . esc_attr( $severity ) . "' id='" . esc_attr( $key ) . "'><p>" . esc_attr( $message ) . "</p></div>";
		}
	}

}

